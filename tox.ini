[tox]
# Supported Python versions and environments
envlist = 
    py{38,39,310,311}-django{32,40,41}
    lint
    type-check
    security
    docs
skip_missing_interpreters = true
isolated_build = true

[gh-actions]
# GitHub Actions Python version mapping
python =
    3.8: py38
    3.9: py39
    3.10: py310
    3.11: py311

[testenv]
# Base test environment configuration
deps = 
    django32: Django>=3.2,<4.0
    django40: Django>=4.0,<4.1
    django41: Django>=4.1,<4.2
    nautobot>=1.5.0
    pytest>=7.0.0
    pytest-django>=4.5.0
    pytest-cov>=4.0.0
commands = 
    # Run tests when implemented
    python -m pytest {posargs}
setenv =
    PYTHONPATH = {toxinidir}
    DJANGO_SETTINGS_MODULE = nautobot.core.settings

[testenv:lint]
# Linting environment
deps = 
    black>=22.0.0
    isort>=5.12.0
    flake8>=5.0.0
    flake8-bugbear
    flake8-comprehensions
    flake8-django
    flake8-docstrings
    flake8-import-order
    flake8-quotes
commands = 
    black --check --diff nautobot_chatbot/
    isort --check-only --diff nautobot_chatbot/
    flake8 nautobot_chatbot/

[testenv:pylint]
# Pylint environment
deps = 
    pylint>=2.15.0
    pylint-django>=2.5.0
    django>=3.2
    nautobot>=1.5.0
commands = 
    pylint nautobot_chatbot/

[testenv:type-check]
# Type checking environment
deps = 
    mypy>=1.0.0
    types-requests
    django>=3.2
    nautobot>=1.5.0
commands = 
    mypy nautobot_chatbot/

[testenv:security]
# Security checking environment
deps = 
    bandit>=1.7.0
    safety>=2.0.0
commands = 
    bandit -r nautobot_chatbot/ -f json -o bandit-report.json
    safety check

[testenv:format]
# Code formatting environment
deps = 
    black>=22.0.0
    isort>=5.12.0
commands = 
    black nautobot_chatbot/
    isort nautobot_chatbot/

[testenv:docs]
# Documentation environment
deps = 
    sphinx>=4.0.0
    sphinx-rtd-theme
    sphinx-autodoc-typehints
commands = 
    # sphinx-build -W -b html docs docs/_build/html
    echo "Documentation build not implemented yet"

[testenv:dev]
# Development environment
deps = 
    {[testenv:lint]deps}
    {[testenv:type-check]deps}
    {[testenv:security]deps}
    pre-commit>=2.20.0
commands = 
    pre-commit install
    pre-commit run --all-files

[testenv:clean]
# Clean environment
deps = 
commands = 
    python -c "
    import shutil
    import os
    dirs = ['build', 'dist', 'htmlcov', '.pytest_cache', '.mypy_cache']
    for d in dirs:
        if os.path.exists(d):
            shutil.rmtree(d)
            print(f'Removed {d}')
    "

# Flake8 configuration
[flake8]
max-line-length = 100
ignore = E203,W503,W504
exclude = 
    .git,
    __pycache__,
    .tox,
    .eggs,
    *.egg,
    build,
    dist,
    migrations,
    venv,
    .venv

# Coverage configuration
[coverage:run]
source = nautobot_chatbot
omit = 
    */migrations/*
    */tests/*
    */venv/*
    */.venv/*

[coverage:report]
exclude_lines = 
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:

# Pytest configuration
[tool:pytest]
DJANGO_SETTINGS_MODULE = nautobot.core.settings
python_files = test_*.py *_test.py *_tests.py
python_classes = Test* *Tests
python_functions = test_*
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    --cov=nautobot_chatbot
    --cov-report=html
    --cov-report=term-missing
testpaths = tests